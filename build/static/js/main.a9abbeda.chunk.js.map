{"version":3,"sources":["components/UI/LoadingSpinner.js","components/layout/MainNavigation.module.css","hooks/use-http.js","lib/api.js","components/comments/NewCommentForm.module.css","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","MainNavigation","header","logo","nav","to","navData","isActive","active","Layout","props","main","children","CommentItem","item","text","CommentsList","comments","map","comment","NewCommentForm","commentTextRef","useRef","navigate","useNavigate","onAddedComment","useEffect","current","value","submitFormHandler","event","preventDefault","enteredText","form","onSubmit","control","htmlFor","rows","ref","actions","onClick","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","length","AllQuotes","React","lazy","then","default","QuoteDetail","NewQuote","NotFound","App","path","element","replace","fallback","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a9abbeda.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1Tn0m\",\"logo\":\"MainNavigation_logo__3MKvq\",\"nav\":\"MainNavigation_nav__2F8H-\",\"active\":\"MainNavigation_active__XNYTT\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://leaningreact-default-rtdb.asia-southeast1.firebasedatabase.app/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__7GSiJ\",\"loading\":\"NewCommentForm_loading__30PZk\",\"control\":\"NewCommentForm_control__3NB7L\",\"actions\":\"NewCommentForm_actions__2cZfx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__137a5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3Tzh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__28ENK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__Xd0mx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1-6Uy\"};","import classes from \"./MainNavigation.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}> Great Quotes </div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to=\"/quotes\"\r\n              className={(navData) => (navData.isActive ? classes.active : \"\")}\r\n            >\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/new-quote\"\r\n              className={(navData) => (navData.isActive ? classes.active : \"\")}\r\n            >\r\n              Add Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n","import { MainNavigation } from \"./MainNavigation\";\r\nimport classes from \"./Layout.module.css\";\r\n\r\nexport const Layout = (props) => {\r\n  return (\r\n    <>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </>\r\n  );\r\n};\r\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const navigate = useNavigate();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      commentTextRef.current.value = \"\";\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n    const enteredText = commentTextRef.current.value;\n    // send comment to server\n    ////we have 2 way to sending quoteId\n    //// first is from 'useLocation' to extract a quoteId from the path of url\n    //// or\n    //// using props sending from parent to child\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n\n      <div className=\"centered\">\n        <div className={classes.actions}>\n          <button type=\"submit\" className=\"btn\">\n            Add Comment\n          </button>\n        </div>\n        <button type=\"button\" className=\"btn\" onClick={() => navigate(-1)}>\n          Back\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useEffect, useState, useCallback } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const navigate = useNavigate();\n  const params = useParams();\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments = <></>;\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (\n    status === \"completed\" &&\n    (!!loadedComments || loadedComments.length > 0)\n  ) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No Comment were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <div className=\"centered\">\n          <button className=\"btn\" onClick={startAddCommentHandler}>\n            Add a Comment\n          </button>\n          <button className=\"btn\" onClick={() => navigate(-1)}>\n            Back\n          </button>\n        </div>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React, { Suspense } from \"react\";\nimport { Route, Routes, Navigate, Link, useNavigate } from \"react-router-dom\";\n\n//import { AllQuotes } from \"./pages/AllQuotes\";\n//import { QuoteDetail } from \"./pages/QuoteDetail\";\n// import { NewQuote } from \"./pages/NewQuote\";\n//import { NotFound } from \"./pages/NotFound\";\nimport { Layout } from \"./components/layout/Layout\";\nimport Comments from \"./components/comments/Comments\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\n///Lazy load a component\n///if you using name export it require to using\n///'.then((module) => ({ default: module.%name_of_component% }))'\n///after import component with react.lazy\n/// DON'T FORGET !! to using <Suspense> (from React) to cover the lazy load component too.\nconst AllQuotes = React.lazy(() =>\n  import(\"./pages/AllQuotes\").then((module) => ({ default: module.AllQuotes }))\n);\nconst QuoteDetail = React.lazy(() =>\n  import(\"./pages/QuoteDetail\").then((module) => ({\n    default: module.QuoteDetail,\n  }))\n);\nconst NewQuote = React.lazy(() =>\n  import(\"./pages/NewQuote\").then((module) => ({ default: module.NewQuote }))\n);\nconst NotFound = React.lazy(() =>\n  import(\"./pages/NotFound\").then((module) => ({ default: module.NotFound }))\n);\n\nfunction App() {\n  const navigate = useNavigate();\n  return (\n    <Layout>\n      <Routes>\n        <Route path=\"/\" element={<Navigate replace to=\"/quotes\" />} />\n        <Route\n          path=\"/quotes\"\n          element={\n            <Suspense\n              fallback={\n                <div>\n                  <LoadingSpinner />\n                </div>\n              }\n            >\n              <AllQuotes />\n            </Suspense>\n          }\n        />\n        <Route\n          path=\"/quotes/:quoteId/*\"\n          element={\n            <Suspense\n              fallback={\n                <div>\n                  <LoadingSpinner />\n                </div>\n              }\n            >\n              <QuoteDetail />\n            </Suspense>\n          }\n        >\n          <Route\n            path=\"\"\n            element={\n              <div className=\"centered\">\n                <Link className=\"btn--flat\" to={`comments`}>\n                  Load Comments\n                </Link>\n                <button className=\"btn\" onClick={() => navigate(-1)}>\n                  Back\n                </button>\n              </div>\n            }\n          />\n          <Route path={`comments`} element={<Comments />} />\n        </Route>\n\n        <Route\n          path=\"/new-quote\"\n          element={\n            <Suspense\n              fallback={\n                <div>\n                  <LoadingSpinner />\n                </div>\n              }\n            >\n              <NewQuote />\n            </Suspense>\n          }\n        />\n\n        <Route\n          path=\"*\"\n          element={\n            <Suspense\n              fallback={\n                <div>\n                  <LoadingSpinner />\n                </div>\n              }\n            >\n              <NotFound />\n            </Suspense>\n          }\n        />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { BrowserRouter as Router } from \"react-router-dom\";\n\nimport ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Router>\n    <App />\n  </Router>\n);\n"],"sourceRoot":""}