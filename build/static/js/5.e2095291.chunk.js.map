{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","NewQuote","useHttp","addQuote","sendRequest","status","navigate","useNavigate","useEffect","quoteData","console","log"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,mB,qBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,2B,4HCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,UAC7C,E,yBCiEcC,EA7DG,SAACL,GAEjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,mCASE,cAAC,EAAD,UACE,uBAAMN,UAAWC,IAAQO,KAAMC,SA9BrC,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBP,EAAeQ,QAAQC,MACvCC,EAAcR,EAAaM,QAAQC,MAIzCf,EAAMiB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACjD,EAqBK,UACGhB,EAAMoB,WACL,qBAAKnB,UAAWC,IAAQmB,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAKrB,UAAWC,IAAQqB,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKrB,OAEtC,sBAAKL,UAAWC,IAAQqB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKnB,OAEpC,qBAAKP,UAAWC,IAAQ2B,QAAxB,SACE,wBAAQJ,KAAK,SAASxB,UAAU,MAAhC,+BAQX,E,gBC7DY6B,EAAW,WACtB,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAWC,cAEjBC,qBAAU,WACO,cAAXH,GACFC,EAAS,UAEZ,GAAE,CAACD,EAAQC,IAOZ,OACE,cAAC,EAAD,CACEf,UAAsB,YAAXc,EACXjB,WARuB,SAACqB,GAC1BC,QAAQC,IAAI,YAAaF,GACzBL,EAAYK,EACb,GAQF,C","file":"static/js/5.e2095291.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1Fg8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1LcZ9\",\"loading\":\"QuoteForm_loading__1mOl4\",\"control\":\"QuoteForm_control__1wQiy\",\"actions\":\"QuoteForm_actions__32jJI\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef } from \"react\";\n//useState\n//import { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  //const [isTouched, setIsTouched] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  // const isFormTouchedHandler = () => {\n  //   setIsTouched(true);\n  // };\n\n  // const finishFormHandler = () => {\n  //   setIsTouched(false);\n  // };\n\n  return (\n    <>\n      {/* React Router V6 not support Prompt (may be back in future version) */}\n      {/* แสดงหน้าต่างแจ้งเตือน when คือเมื่อไหร่ที่ค่าในนั้นเป็น true จะแสดงหน้าต่างแจ้งเตือนขึ้นมา */}\n      {/* <Prompt\n        when={isTouched}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data wll be lost.\"\n        }\n      /> */}\n      <Card>\n        <form className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button type=\"submit\" className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nexport const NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      navigate(\"/quotes\",);\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const addNewQuoteHandler = (quoteData) => {\r\n    console.log(\"quoteData\", quoteData);\r\n    sendRequest(quoteData);\r\n  };\r\n\r\n  return (\r\n    <QuoteForm\r\n      isLoading={status === \"pending\"}\r\n      onAddQuote={addNewQuoteHandler}\r\n    />\r\n  );\r\n};\r\n"],"sourceRoot":""}